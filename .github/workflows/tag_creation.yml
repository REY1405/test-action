name: DWH Payout Flow Tag Creation

on:
  push:
    branches: [ "master" ]
    paths-ignore:
      - 'lambdas/**'
      - '.github/**'
  workflow_dispatch:    

permissions:
  id-token: write
  contents: write

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@v3

    - name: Create tag version
      run: |
        #!/bin/bash

        # Fetch all tags including remote
        git fetch --prune --unshallow --tags

        # Get the latest tag matching vX.Y.Z pattern, sorted by creatordate descending
        LATEST_TAG=$(git tag --sort=-creatordate |  grep "^v[0-9].[0-9].[0-9]" | head -n1 | awk -Fv '{print $2}')
        
        echo $LATEST_TAG 
        
        if [[ -z "$LATEST_TAG" ]]; then
            # No tags found, start from v0.0.0
            ENTITY_1=0
            ENTITY_2=0
            ENTITY_3=0
        else
            # Extract version numbers
            VERSION="${LATEST_TAG#v}"
            ENTITY_1=$(echo "$VERSION" | cut -d. -f1)
            ENTITY_2=$(echo "$VERSION" | cut -d. -f2)
            ENTITY_3=$(echo "$VERSION" | cut -d. -f3)
        fi

        # Increment version properly
        if [[ "$ENTITY_3" -eq 9 ]]; then
            ENTITY_3=0
            if [[ "$ENTITY_2" -eq 9 ]]; then
                ENTITY_2=0
                ENTITY_1=$((ENTITY_1 + 1))
            else
                ENTITY_2=$((ENTITY_2 + 1))
            fi
        else
            ENTITY_3=$((ENTITY_3 + 1))
        fi

        NEW_TAG="v${ENTITY_1}.${ENTITY_2}.${ENTITY_3}"

        # Check if tag already exists and increment further until unique
        while git rev-parse "$NEW_TAG" >/dev/null 2>&1; do
            if [[ "$ENTITY_3" -eq 9 ]]; then
                ENTITY_3=0
                if [[ "$ENTITY_2" -eq 9 ]]; then
                    ENTITY_2=0
                    ENTITY_1=$((ENTITY_1 + 1))
                else
                    ENTITY_2=$((ENTITY_2 + 1))
                fi
            else
                ENTITY_3=$((ENTITY_3 + 1))
            fi
            NEW_TAG="v${ENTITY_1}.${ENTITY_2}.${ENTITY_3}"
        done

        echo "Creating and pushing tag: $NEW_TAG"
        git tag "$NEW_TAG"
        git push origin "$NEW_TAG"
        echo "Tag $NEW_TAG created and pushed successfully"

